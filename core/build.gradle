apply plugin: "java"

sourceCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/" ]

task convert << {

    // copy textures
    FileTree textures = fileTree(dir: '../android/assets/data/models/blend/', exclude: '**/*.blend')

    textures.each { File file ->
        File target_fbx = new File(file.getPath().replaceAll('blend', 'fbx'))
        File target_g3db = new File(file.getPath().replaceAll('blend', 'g3db'))

        copy {
            from file
            into target_fbx.getParent()
        }

        copy {
            from file
            into target_g3db.getParent()
        }
    }

    // export blend to fbx and make miniatures

    FileTree blend_tree = fileTree(dir: '../android/assets/data/models/blend/', include: '**/*.blend')

    blend_tree.each {File file ->
        println 'compiling ' + file.getName() + '...'
        task "makeFBX${file.getParentFile().getName()}"(type:Exec) {

            // .../fbx/.../.*.fbx -> .../g3db/.../.*.g3db
            File target = new File(file.getPath().replaceAll('blend', 'fbx'))
            target.getParentFile().mkdirs()
            //linux
            // blender foobar.blend --background --python fbxexporter.py -- foobar.fbx
            commandLine 'blender', '-b', file, '--python', 'android/assets/data/models/scripts/fbxexporter.py', '--', target

            standardOutput = new ByteArrayOutputStream()

            ext.output = {
                return standardOutput.toString()
            }

            execute()
        }


        task "makeMiniature${file.getParentFile().getName()}"(type:Exec) {

            // .../fbx/.../.*.fbx -> .../g3db/.../.*.g3db
            File target = new File(file.getPath().replaceAll('blend', 'g3db'))
            target.getParentFile().mkdirs()
            // remove extension
            String output = target.path.lastIndexOf('.').with {it != -1 ? target.path[0..<it] : target.path}

            //linux
            // blender -b file.blend -o //file -F JPEG -x 1 -f 1
            commandLine 'blender', '-b', file, '-o', output + '#', '-F', 'JPEG', '-x', '1', '-f', '1'

            standardOutput = new ByteArrayOutputStream()

            ext.output = {
                return standardOutput.toString()
            }

            execute()

            // remove trailing frame number
            new File(output + '1.jpg').renameTo(new File(output + '.jpg'))

        }
    }

    // export fbx to g3db
    FileTree fbx_tree = fileTree(dir: '../android/assets/data/models/fbx/', include: '**/*.fbx')

    fbx_tree.each {File file ->
        println 'compiling ' + file.getName() + '...'
        task "makeG3DB${file.getParentFile().getName()}"(type:Exec) {

            // .../fbx/.../.*.fbx -> .../g3db/.../.*.g3db
            File target = new File(file.getPath().replaceAll('fbx', 'g3db'))

            workingDir '../android/assets/data/models/fbx-conv/'
            environment('LD_LIBRARY_PATH', '.')

            //linux
            commandLine './fbx-conv-lin64', file, target

            standardOutput = new ByteArrayOutputStream()

            ext.output = {
                return standardOutput.toString()
            }

            execute()
        }
    }

}

eclipse.project {
    name = appName + "-core"
    convert.execute()
}
